USE QLSVNhom
GO 

CREATE PROCEDURE SP_INS_PUBLIC_NHANVIEN (
	@MANV VARCHAR(20),
	@HOTEN NVARCHAR(100),
	@EMAIL VARCHAR(20),
	@LUONGCB INT, 
	@TENDN NVARCHAR(100),
	@MK NVARCHAR(100)
)
AS 
BEGIN 

	IF NOT EXISTS (SELECT * FROM sys.asymmetric_keys WHERE NAME = @MANV)
	BEGIN
		DECLARE @SSQL NVARCHAR(100) = N'CREATE ASYMMETRIC KEY ' + QUOTENAME(@MANV) + 
		N' WITH ALGORITHM = RSA_2048 ENCRYPTION BY PASSWORD = ''' + @MK + ''''

		EXEC sp_executesql @SSQL
	END
	
	DECLARE @LUONG_BINARY VARBINARY(MAX);
    SET @LUONG_BINARY = ENCRYPTBYASYMKEY(ASYMKEY_ID(@MANV), convert(varbinary(MAX), @LUONGCB));
	
	INSERT INTO NHANVIEN(MANV, HOTEN, EMAIL, LUONG, TENDN, MATKHAU, PUBKEY) VALUES (@MANV, @HOTEN, @EMAIL, @LUONG_BINARY, @TENDN, HASHBYTES('SHA1', @MK), @MANV)
END 
GO

CREATE PROCEDURE SP_SEL_PUBLIC_NHANVIEN(
	@TENDN NVARCHAR(100),
	@MK NVARCHAR(100)
)
AS 
BEGIN

	SELECT 
		MANV, 
		HOTEN, 
		EMAIL, 
		CONVERT(INT, DECRYPTBYASYMKEY( ASYMKEY_ID(MANV), LUONG, @MK)) AS LUONGCB FROM NHANVIEN
	WHERE TENDN = @TENDN AND MATKHAU = HASHBYTES('SHA1', @MK)

END
GO 

CREATE PROCEDURE SP_UPDATE_DIEM(
	@MASV VARCHAR(20), 
	@MAHP VARCHAR(20),
	@DIEM INT,
	@MANV VARCHAR(20)
)
AS 
BEGIN
	UPDATE BANGDIEM
	SET DIEMTHI = ENCRYPTBYASYMKEY (ASYMKEY_ID(@MANV), CONVERT(varbinary(MAX), @DIEM)) 
	WHERE @MASV = MASV AND @MAHP = MAHP
END 

GO 

CREATE PROCEDURE SP_SEL_DIEM (
	@MASV VARCHAR(20),
	@MANV VARCHAR(20),
	@MK NVARCHAR(100)
)
AS
BEGIN
	SELECT 
		BANGDIEM.MASV, BANGDIEM.MAHP, HOCPHAN.TENHP, HOCPHAN.SOTC, 
		CAST(DECRYPTBYASYMKEY(ASYMKEY_ID(@MANV), DIEMTHI, @MK) AS INT) AS DIEMTHI
	FROM 
		BANGDIEM JOIN SINHVIEN ON BANGDIEM.MASV = SINHVIEN.MASV
		JOIN HOCPHAN ON HOCPHAN.MAHP = BANGDIEM.MAHP
	WHERE SINHVIEN.MASV = @MASV 
END
GO 
